{"dependencies":[{"name":"express","loc":{"line":1,"column":20}},{"name":"cookie-parser","loc":{"line":2,"column":25}},{"name":"cookie-session","loc":{"line":3,"column":26}},{"name":"path","loc":{"line":4,"column":17}},{"name":"body-parser","loc":{"line":5,"column":23}},{"name":"./controller/dbcontroller","loc":{"line":6,"column":25}},{"name":"./controller/personcontroller","loc":{"line":7,"column":29}},{"name":"./controller/routescontroller","loc":{"line":8,"column":29}}],"generated":{"js":"\"use strict\";\n\nvar _express = require(\"express\");\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _cookieParser = require(\"cookie-parser\");\n\nvar _cookieParser2 = _interopRequireDefault(_cookieParser);\n\nvar _cookieSession = require(\"cookie-session\");\n\nvar _cookieSession2 = _interopRequireDefault(_cookieSession);\n\nvar _path = require(\"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _bodyParser = require(\"body-parser\");\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _dbcontroller = require(\"./controller/dbcontroller\");\n\nvar _dbcontroller2 = _interopRequireDefault(_dbcontroller);\n\nvar _personcontroller = require(\"./controller/personcontroller\");\n\nvar _personcontroller2 = _interopRequireDefault(_personcontroller);\n\nvar _routescontroller = require(\"./controller/routescontroller\");\n\nvar _routescontroller2 = _interopRequireDefault(_routescontroller);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst app = (0, _express2.default)();\n\n// http://expressjs.com/en/guide/using-middleware.html\nfunction checkAuth(req, res, next) {\n\n  // für nicht admin nicht ausliefern\n  if (req.url === '/admin' && (!req.session || !req.session.authenticated)) {\n    res.render('pages/notauthorised', { status: 403 });\n    return;\n  }\n  if (req.url === '/persons' && (!req.session || !req.session.authenticated)) {\n    res.render('pages/notauthorised', { status: 403 });\n    return;\n  }\n  next();\n}\n\n// Datenbank initialisieren\n_dbcontroller2.default.initdb();\n\napp.set('view engine', 'ejs');\napp.set('views', _path2.default.resolve(\"./server/views\"));\n\n// Express configuration\napp.use(\"/images\", _express2.default.static(_path2.default.resolve(\"./server/public/images\")));\napp.use(_bodyParser2.default.urlencoded({ extended: false }));\napp.use((0, _cookieParser2.default)());\napp.use((0, _cookieSession2.default)({ secret: 'examplesecret' }));\napp.use(checkAuth);\n\napp.get('/persons', _personcontroller2.default.index);\napp.delete('/persons', _personcontroller2.default.removeAll);\napp.get('/person/:id', _personcontroller2.default.remove);\n\n// Übername der Parameter von HTML Form und anlegen des Models\napp.post('/person', _personcontroller2.default.create);\napp.post('/person/info', _personcontroller2.default.info);\napp.post('/person/neupin', _personcontroller2.default.neupin);\n\napp.get('/persons/:id/card/pin', _personcontroller2.default.generatepin);\napp.post('/persons/:id/card/pin', _personcontroller2.default.generatepin);\n\n// DB Befüllen\napp.get('/populatedb', _dbcontroller2.default.populate);\n\napp.post('/login', _routescontroller2.default.loginpost);\napp.get('/login', _routescontroller2.default.loginget);\napp.get('/customer', _routescontroller2.default.customer);\napp.get('/admin', _routescontroller2.default.admin);\napp.get('/logout', _routescontroller2.default.logout);\napp.get('/', _routescontroller2.default.getroot);\napp.get('*', _routescontroller2.default.catchAll);\n\napp.listen(3113, () => {\n  console.log('URL des Servers: http://localhost:3113');\n});"},"hash":"85c8f61fcab4b13ed81b3a994ca9fd08"}