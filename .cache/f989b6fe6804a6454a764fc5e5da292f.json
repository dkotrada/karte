{"dependencies":[{"name":"../model/person","loc":{"line":1,"column":24}}],"generated":{"js":"\"use strict\";\n\nvar _person = require(\"../model/person\");\n\nvar _person2 = _interopRequireDefault(_person);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  create: (req, res) => {\n    const kartennummer = Math.floor(Math.random() * 999999);\n    const person = new _person2.default({\n      title: req.body.title,\n      name: req.body.name,\n      vorname: req.body.vorname,\n      strasse: req.body.strasse,\n      hausnummer: req.body.hausnummer,\n      stadt: req.body.stadt,\n      postleitzahl: req.body.postleitzahl,\n      telefon: req.body.telefon,\n      email: req.body.email,\n      card: {\n        pin: 0,\n        uuid: kartennummer\n      }\n    });\n    person.save((err, person) => {\n      if (err) {\n        res.render('pages/abortion');\n        console.log(err);\n      } else {\n        res.render('pages/confirmation');\n        console.log(person);\n      }\n    });\n  },\n  neupin: (req, res) => {\n    // z.B 59f74c24488a29eabb42414a\n    _person2.default.findOne({ 'email': req.body.email }, (err, person) => {\n      if (err) {\n        return res.send(err);\n      }\n      person.card.pin = req.body.pin;\n      console.log(\"Person: \", person);\n\n      person.save((err, person) => {\n        if (err) {\n          res.render('pages/abortion');\n          console.log(err);\n        } else {\n          res.render('pages/confirmpin');\n          console.log(person);\n        }\n      });\n    });\n  },\n  info: (req, res) => {\n    _person2.default.findOne({ 'email': req.body.email }, (err, person) => {\n      if (err) {\n        return res.send(err);\n      } else {\n        if (req.body.pin == person.card.pin) {\n          res.render('pages/personinfo', {\n            person: person\n          });\n        } else {\n          res.render('pages/abortion');\n        }\n      }\n    });\n  },\n  index: (req, res) => {\n    _person2.default.find({}, (err, peoples) => {\n      if (err) {\n        return res.send(err);\n      } else {\n        res.render('pages/personen', {\n          persons: peoples\n        });\n      }\n    });\n  },\n  remove: (req, res) => {\n    const id = req.params.id;\n    _person2.default.remove({ '_id': id }, err => {\n      if (err) {\n        return res.send(err);\n      } else {\n        res.render('pages/confirmdelete');\n      }\n    });\n  },\n  removeAll: (req, res) => {\n    _person2.default.remove({}, err => {\n      if (err) {\n        return res.send(err);\n      }\n      res.send('200');\n    });\n  },\n  generatepin: (req, res) => {\n    const id = req.params.id;\n    // Zahlen von 0 - 9999\n    const zahl = Math.floor(Math.random() * 9999);\n    _person2.default.findOne({ '_id': id }, (err, person) => {\n      if (err) {\n        console.log(err);\n        res.send({ pin: 0 }); // Fehler\n      } else {\n        // PIN in der Datenbank schreiben\n        person.update({ card: { pin: zahl } }).exec();\n        //res.send({pin: zahl});\n        res.render('pages/confirmpin');\n      }\n    });\n  }\n};"},"hash":"317a0cd7788bdfe1f76b2418aa92c4fe"}