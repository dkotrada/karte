{"dependencies":[{"name":"mongodb-core","loc":{"line":27,"column":33}},{"name":"./lib/apm","loc":{"line":3,"column":28}},{"name":"./lib/mongo_client","loc":{"line":13,"column":30}},{"name":"./lib/admin","loc":{"line":12,"column":24}},{"name":"./lib/db","loc":{"line":14,"column":21}},{"name":"./lib/collection","loc":{"line":15,"column":29}},{"name":"./lib/server","loc":{"line":16,"column":25}},{"name":"./lib/replset","loc":{"line":17,"column":26}},{"name":"./lib/mongos","loc":{"line":18,"column":25}},{"name":"./lib/read_preference","loc":{"line":19,"column":33}},{"name":"./lib/gridfs/grid_store","loc":{"line":20,"column":28}},{"name":"./lib/gridfs/chunk","loc":{"line":21,"column":24}},{"name":"./lib/cursor","loc":{"line":23,"column":25}},{"name":"./lib/gridfs-stream","loc":{"line":24,"column":31}}],"generated":{"js":"// Core module\nvar core = require('mongodb-core'),\n  Instrumentation = require('./lib/apm');\n\n// Set up the connect function\nvar connect = require('./lib/mongo_client').connect;\n\n// Expose error class\nconnect.MongoError = core.MongoError;\n\n// Actual driver classes exported\nconnect.Admin = require('./lib/admin');\nconnect.MongoClient = require('./lib/mongo_client');\nconnect.Db = require('./lib/db');\nconnect.Collection = require('./lib/collection');\nconnect.Server = require('./lib/server');\nconnect.ReplSet = require('./lib/replset');\nconnect.Mongos = require('./lib/mongos');\nconnect.ReadPreference = require('./lib/read_preference');\nconnect.GridStore = require('./lib/gridfs/grid_store');\nconnect.Chunk = require('./lib/gridfs/chunk');\nconnect.Logger = core.Logger;\nconnect.Cursor = require('./lib/cursor');\nconnect.GridFSBucket = require('./lib/gridfs-stream');\n// Exported to be used in tests not to be used anywhere else\nconnect.CoreServer = require('mongodb-core').Server;\nconnect.CoreConnection = require('mongodb-core').Connection;\n\n// BSON types exported\nconnect.Binary = core.BSON.Binary;\nconnect.Code = core.BSON.Code;\nconnect.Map = core.BSON.Map;\nconnect.DBRef = core.BSON.DBRef;\nconnect.Double = core.BSON.Double;\nconnect.Int32 = core.BSON.Int32;\nconnect.Long = core.BSON.Long;\nconnect.MinKey = core.BSON.MinKey;\nconnect.MaxKey = core.BSON.MaxKey;\nconnect.ObjectID = core.BSON.ObjectID;\nconnect.ObjectId = core.BSON.ObjectID;\nconnect.Symbol = core.BSON.Symbol;\nconnect.Timestamp = core.BSON.Timestamp;\nconnect.BSONRegExp = core.BSON.BSONRegExp;\nconnect.Decimal128 = core.BSON.Decimal128;\n\n// Add connect method\nconnect.connect = connect;\n\n// Set up the instrumentation method\nconnect.instrument = function(options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  return new Instrumentation(core, options, callback);\n}\n\n// Set our exports to be the connect function\nmodule.exports = connect;\n"},"hash":"c22627138999f02d09186861a18c6d09"}